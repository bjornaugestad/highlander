#!/bin/bash

gcc -o json -DJSON_CHECK -Wall -Wextra -pedantic -std=c99 json.c -lmeta
if test $? -ne 0; then
    exit 1
fi

# ./json test/fail1.json && exit 1 # OK, fails as expected
# ./json test/fail2.json && exit 1 # OK, fails as expected
# ./json test/fail3.json && exit 1 # OK, fails as expected

# ./json test/fail4.json && exit 1 # extra comma
# ./json test/fail5.json && exit 1 # double extra comma
# ./json test/fail6.json && exit 1 # Missing value (name actually)
# ./json test/fail7.json && exit 1 # Comma after the close (as in [],)
# ./json test/fail8.json && exit 1 # extra close ([]])
# ./json test/fail9.json && exit 1 # Extra comma (after value and before })
# ./json test/fail10.json && exit 1 # extra value after close

# ./json test/fail11.json && exit 1 # OK, fails as expected
# ./json test/fail12.json && exit 1 # OK, fails as expected

# ./json test/fail13.json && exit 1 # Numbers cannot have leading zeroes
# ./json test/fail14.json && exit 1 # OK
# ./json test/fail15.json && exit 1 # Illegal backslash escape (\x15)
# ./json test/fail16.json && exit 1 # OK
# ./json test/fail17.json && exit 1 # Illegal backslash escape (\017)
# ./json test/fail18.json && exit 1 # Too deep (as in [[[[[[[[[[["too deep"]]]]]]]]

# ./json test/fail19.json && exit 1 # OK
# ./json test/fail20.json && exit 1 # OK
# ./json test/fail21.json && exit 1 # OK
# ./json test/fail22.json && exit 1 # OK
# ./json test/fail23.json && exit 1 # OK
# ./json test/fail24.json && exit 1 # OK

./json test/fail25.json && exit 1 # TAB character in string
./json test/fail26.json && exit 1 # TAB character in string
# ./json test/fail27.json && exit 1 # Line break (in quoted string)
# ./json test/fail28.json && exit 1 # Line break (in quoted string)

# ./json test/fail29.json && exit 1 # OK
# ./json test/fail30.json && exit 1 # OK
# ./json test/fail31.json && exit 1 # OK
# ./json test/fail32.json && exit 1 # OK
# ./json test/fail33.json && exit 1 # OK
