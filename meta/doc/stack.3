.TH stack 3 2016-01-30 "" "The Meta C Library"
.SH NAME
stack \- A stack ADT
.SH SYNOPSIS
.B #include <meta_stack.h>
.sp
.BI "stack stack_new(void);

.BI "void stack_free(stack s);

.BI "status_t stack_push(stack s, void *p);

.BI "void *stack_top(stack s);

.BI "void stack_pop(stack s);

.BI "size_t stack_nelem(stack s);

.BI "void *stack_get(stack s, size_t i);

.SH DESCRIPTION
.Nm stack_new()
Creates a new stack.

.Nm stack_free()
Frees an existing stack.
Items on the stack will not be freed.

.Nm stack_push()
Pushes a new item onto the stack.

.Nm stack_top()
Returns the top item on the stack. Will return NULL if the
stack was empty. The debug version will abort() if the stack
was empty.

.Nm stack_pop()
Removes the top item from the stack. This API
is inspired, IIRC, from the C++ STL stack implementation.

.Nm stack_nelem()
returns the number of elements on the stack.

.Nm stack_get()
We sometimes need to inspect the stack without popping the items
on it. This function returns the n'th element on the stack.
Note that element 0 is the top element and element n is the last(bottom)
element on the stack.
This function returns NULL if there are no item matching the index

