.TH tcp_server_set_service_function 3 2016-01-30 "" "The Meta C Library"
.SH NAME
tcp_server_set_service_function() \- Sets the callback function
.SH SYNOPSIS
.B #include <tcp_server.h>
.sp
.BI "void tcp_server_set_service_function(tcp_server srv, void* (*func)(void*), void* arg);

.SH DESCRIPTION
Set the function that will be called from tcp_server to
service requests from clients. The service function is called
once for each client connecting to the server, so the function
must be thread safe.
.PP
.Fa arg
can be anything and will be passed on to the service function as 
connection_arg2.
.SH EXAMPLE
Below is the source code for a simple echoserver which shows
how the 
.Fa arg
argument can be accessed. In a real world application, the value
would not be a string, but a pointer to data that the service function
needs to implement the server.
.in +4n
.nf
.B #include <stdio.h>
.sp
.B #include <tcp_server.h>
.sp
.B #include <connection.h>
.sp
void* echoserverfn(void* arg)
{
    int c;
    connection conn = arg;
    char *s = connection_arg2(conn);
    printf("%s\\n", s);
    while(connection_getc(conn, &c)) {
        connection_putc(conn, c);
        connection_flush(conn);
    }
    return NULL;
}
int main(void)
{
    char foo[] = "Hello, argument 2";
    tcp_server s = tcp_server_new();
    tcp_server_set_service_function(
        s, 
        echoserverfn,
        foo);
    tcp_server_init(s);
    tcp_server_get_root_resources(s);
    tcp_server_start(s);
    tcp_server_free(s);
    return 0;
}
.nf
.in
