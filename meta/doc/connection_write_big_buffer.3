.TH connection_write_big_buffer 3 2016-01-30 "" "The Meta C Library"
.SH NAME
connection_write_big_buffer \- Write a big buffer directly to the socket
.SH SYNOPSIS
.B #include <connection.h>
.sp
.BI "int connection_write_big_buffer(connection conn, const void* buf, size_t cb, int timeout, int retries);

.SH DESCRIPTION
I have encountered problems when I send large files. This surfaced
after porting to aix, and is probably related to tcp/ip buffer sizes
on aix. The problem is that Highlander times out when sending large 
buffers and since the retry count normally is low, Highlander closes
the connection before we have transfered all the data. 
.PP
This can be fixed in several ways, we can increase the timeout, 
we can increase the number of retries. Neither solution is optimal,
as it will delay the overall snappyness of the server. I've therefore
added this function which writes large data "unbuffered" with its own
timeout/retry values. This function bypasses the normal values for
a connection.
.PP
Now, what is a big buffer? I don't know, but anything greater than
e.g. 64KB is unlikely to fit in within a normal tcp/ip buffer.
.PP
This function will call connection_flush() before it starts transfering
data.
.SH RETURN VALUE
.Nm
returns 1 if the buffer was written to the socket and 0 if an
error occured. Note that connection_flush() may cause errors.
.SH AUTHOR
.An B. Augestad, bjorn.augestad@gmail.com
