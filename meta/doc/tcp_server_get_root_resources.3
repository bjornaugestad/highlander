.TH tcp_server_get_root_resources 3
.SH NAME
.Nm tcp_server_get_root_resources()
.Nd Creates and binds the socket the server uses
.SH SYNOPSIS
.Fd #include <tcp_server.h>
.Fo "int tcp_server_get_root_resources"
.Fa "tcp_server srv"
.Fc
.SH DESCRIPTION
.Nm
gets all resources which must be gotten while we are root.
For the tcp_server this mainly is binding reserved ports.
.Pp
Note that this function must be called even if the tcp_server 
doesn't require any root resources, ie when binding to a port
above 1023. The name is just to indicate that it must be called
while the process runs as root.
.SH EXAMPLE
The following example assumes that the process is started as 
the user \e root. The snippet will create and configure a tcp_server
as root and later switch to a user named \e foo. Then it will
start accepting connections. Please note that error handling
is dropped here for clarity. Production code should always check
for errors.
.Bd -literal
   struct passwd* pwd = getpwnam("foo");
   tcp_server srv = tcp_server_new();
   tcp_server_init(srv);
   tcp_server_get_root_resources(srv);
   setuid(pwd->pw_uid);
   tcp_server_start(srv);
   tcp_server_free_root_resources(srv);
   tcp_server_free(srv);
.Ed
.SH RETURN VALUE
.Nm
return 1 on success, else 0.
.SH SEE ALSO
.Xr meta_process 7 ,
.Xr tcp_server_free_root_resources 3
.SH AUTHOR
.An B. Augestad, bjorn.augestad@gmail.com
