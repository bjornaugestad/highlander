.Dd Nov 25, 2005
.Os POSIX
.Dt META
.Th fifo_signal 3
.Sh NAME
.Nm fifo_signal
.Nm fifo_write_signal
.Nm fifo_wait_cond
.Nm fifo_wake
.Nd Signalling functions for meta_fifo
.Sh SYNOPSIS
.Fd #include <meta_fifo.h>
.Fo "int fifo_write_signal"
.Fa "fifo p"
.Fa "void *data"
.Fc
.Fo "int fifo_wait_cond"
.Fa "fifo p"
.Fc
.Fo "int fifo_wake"
.Fa "fifo p"
.Fc
.Fo "int fifo_signal"
.Fa "fifo p"
.Fc
.Sh DESCRIPTION
Sometimes a reader thread wants to be notified whenever data is added to
the fifo. This is done using these functions:
fifo_write_signal() - First write, then call pthread_cond_signal()
fifo_signal() - Just signal that there's data in the fifo.
fifo_wait_cond() - waits until data is written to the buffer.
fifo_wake() - Wakes any sleeping threads by calling wlock_broadcast().
.Pp
Remember that a fifo should be used either in this blocking mode with
no extra locking, or with no calls to these new functions and external
calls to the locking functions fifo_lock() and fifo_unlock(). 
.Pp
.Nm fifo_wait_cond()
locks the fifo, then calls wlock_wait() to wait for data to arrive in
the fifo. If data is present in the fifo when 
.Nm fifo_wait_cond()
wakes up, the function returns 1. If no data is available, 
.Nm fifo_wait_cond()
sets errno to ENOENT and returns 0.
.Pp
I guess we need quite a lot of examples to explain this to people. :-(
.Sh SEE ALSO
.Xr meta_wlock 3
.Sh AUTHOR
.An B. Augestad, bjorn.augestad@gmail.com
