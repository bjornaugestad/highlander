Fri Jan 25 14:55:31 CET 2008
- Add support for RFC2617. Needed to do Digest Authentication on snoopy

Tue Jan  3 11:24:31 CET 2006
Clean up cache control in the general header. See 14.9 for more info.

Fri Dec 23 06:30:05 CET 2005
Consider using mmap() in response.c:send_entire_file().

2004-07-24: 
	- See if meta_error can be removed in its entirity.
	- See if pair can be replaced with meta_map or stringmap.

ti. 07. juli 11:05:53 +0200 2020
Note to self: Here's how the ssl book's sample code generates certificates.
The below lines are copied from a Makefile.
Generating certs is needed so sslserver works correctly. We need to update our unit tests
so they work properly.
    $(CERTS): $(CERTS:.pem=.cnf)
        $(OPENSSL) req -newkey rsa:1024 -sha1 -keyout rootkey.pem -out rootreq.pem -config root.cnf
        $(OPENSSL) x509 -req -in rootreq.pem -sha1 -extfile root.cnf -extensions certificate_extensions -signkey rootkey.pem -out rootcert.pem
        $(CAT) rootcert.pem rootkey.pem > root.pem
        $(OPENSSL) req -newkey rsa:1024 -sha1 -keyout serverCAkey.pem -out serverCAreq.pem -config serverCA.cnf
        $(OPENSSL) x509 -req -in serverCAreq.pem -sha1 -extfile serverCA.cnf -extensions certificate_extensions -CA root.pem -CAkey root.pem -CAcreateserial -out serverCAcert.pem
        $(CAT) serverCAcert.pem serverCAkey.pem rootcert.pem > serverCA.pem
        $(OPENSSL) req -newkey rsa:1024 -sha1 -keyout serverkey.pem -out serverreq.pem -config server.cnf -reqexts req_extensions
        $(OPENSSL) x509 -req -in serverreq.pem -sha1 -extfile server.cnf -extensions certificate_extensions -CA serverCA.pem -CAkey serverCA.pem -CAcreateserial -out servercert.pem
        $(CAT) servercert.pem serverkey.pem serverCAcert.pem rootcert.pem > server.pem
        $(OPENSSL) req -newkey rsa:1024 -sha1 -keyout clientkey.pem -out clientreq.pem -config client.cnf -reqexts req_extensions
        $(OPENSSL) x509 -req -in clientreq.pem -sha1 -extfile client.cnf -extensions certificate_extensions -CA root.pem -CAkey root.pem -CAcreateserial -out clientcert.pem
        $(CAT) clientcert.pem clientkey.pem rootcert.pem > client.pem

    certclean:
        $(RM) -f rootkey.pem rootreq.pem rootcert.pem root.pem root.srl
        $(RM) -f serverCAkey.pem serverCAreq.pem serverCAcert.pem serverCA.pem serverCA.srl
        $(RM) -f serverkey.pem serverreq.pem servercert.pem server.pem
        $(RM) -f clientkey.pem clientreq.pem clientcert.pem client.pem

    dh512.pem:
        $(OPENSSL) dhparam -check -text -5 512 -out dh512.pem

    dh1024.pem:
        $(OPENSSL) dhparam -check -text -5 1024 -out dh1024.pem

    dhparamclean:
        $(RM) -f $(DHPARAMS)

Thu Oct 16 06:31:03 CEST 2025
- The above cert stuff's been replaced with a script in apps/echoserver. 
- TLS 1.3 is minimum now and I think the impl is OK
- Considering removing functionality from the code to make it safer as an appserver on tor.
  Think cookie-support, leaving potential info.
- I need to read up on the Tor Protocol, as it's getting dark out there. Chat Control and worse
    - Tor har HSDir som er public. 
    - Tor har ogs√• egne v3 client auth, som gjemmer adressen utenfor HSDir. Man kan dele ut
      certs til egne brukere.

  
Sat Oct 18 08:32:39 CEST 2025
- Merge tcpsocket and sslsocket into socket_t. 
